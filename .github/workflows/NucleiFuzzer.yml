# .github/workflows/nuclei-fuzzer.yml
name: NucleiFuzzer (domains.txt)

on:
  push:
    branches: [ main ]
  workflow_dispatch:       # allow manual trigger

permissions:
  contents: read

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    steps:

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure Input/domains.txt exists
        run: |
          if [ ! -f "Input/domains.txt" ]; then
            echo "ERROR: Inputs/domains.txt not found."
            exit 1
          fi
          echo "Found Input/domains.txt with $(wc -l < Input/domains.txt) domains."

      - name: Install system packages & Go
        run: |
          set -euo pipefail
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y git build-essential curl wget ca-certificates dnsutils iputils-ping
          if ! command -v go >/dev/null 2>&1; then
            GO_VER="1.21.8"
            wget -q https://go.dev/dl/go${GO_VER}.linux-amd64.tar.gz -O /tmp/go.tar.gz
            sudo rm -rf /usr/local/go
            sudo tar -C /usr/local -xzf /tmp/go.tar.gz
            echo "export PATH=\$PATH:/usr/local/go/bin:\$HOME/go/bin" >> $GITHUB_ENV
          fi

      - name: Install common tools (httpx, nuclei, etc.)
        run: |
          set -euo pipefail
          export GOPATH="$HOME/go"
          export PATH="$PATH:$GOPATH/bin"
          mkdir -p "$GOPATH"
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install github.com/tomnomnom/waybackurls@latest
          go install github.com/bp0lr/gauplus@latest
          go install github.com/hakluke/hakrawler@latest
          go install github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
          git clone --depth 1 https://github.com/s0md3v/uro.git /tmp/uro && cd /tmp/uro && go build && sudo mv uro /usr/local/bin || true
          git clone --depth 1 https://github.com/projectdiscovery/katana.git /tmp/katana && cd /tmp/katana/cmd/katana && go build && sudo mv katana /usr/local/bin || true

      - name: Clone & install NucleiFuzzer
        run: |
          git clone --depth 1 https://github.com/0xKayala/NucleiFuzzer.git /tmp/NucleiFuzzer
          cd /tmp/NucleiFuzzer
          chmod +x install.sh || true
          ./install.sh || true
          if [ -f ./nf ]; then
            sudo mv nf /usr/local/bin/nf
            sudo chmod +x /usr/local/bin/nf
          fi
          nf -h || true

      - name: Debug connectivity
        run: |
          echo "=== Checking Internet Connectivity ==="
          curl -I https://github.com || true
          curl -I https://scanme.sh || true
          ping -c 2 8.8.8.8 || true
          nslookup github.com || true
          echo "====================================="

      - name: Run NucleiFuzzer scan
        env:
          INPUT_FILE: Input/domains.txt
          OUTPUT_DIR: artifacts/nucleifuzzer
        run: |
          mkdir -p "$OUTPUT_DIR"
          if command -v nf >/dev/null 2>&1; then
            nf -f "$INPUT_FILE" -o "$OUTPUT_DIR"
          else
            echo "ERROR: nf binary not found."
            exit 1
          fi
          echo "Results saved into $OUTPUT_DIR"
          ls -lah "$OUTPUT_DIR" || true

      - name: Upload NucleiFuzzer results
        uses: actions/upload-artifact@v4
        with:
          name: nucleifuzzer-results
          path: artifacts/nucleifuzzer

      - name: Upload logs if failed
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-fuzzer-run-logs
          path: ${{ github.workspace }}

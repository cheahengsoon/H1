# .github/workflows/nuclei-fuzzer-scan.yml
name: NucleiFuzzer Scan

on:
  workflow_dispatch:

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git wget curl python3 python3-pip unzip jq
        pip install requests urllib3 beautifulsoup4

    - name: Install NucleiFuzzer
      run: |
        git clone https://github.com/0xKayala/NucleiFuzzer.git
        cd NucleiFuzzer
        chmod +x install.sh
        ./install.sh

    - name: Install ParamSpider
      run: |
        git clone https://github.com/devanshbatham/ParamSpider.git

    - name: Install Nuclei (latest release via API)
      run: |
        VERSION=$(curl -s https://api.github.com/repos/projectdiscovery/nuclei/releases/latest \
          | grep '"tag_name":' \
          | sed -E 's/.*"([^"]+)".*/\1/')
        echo "Installing Nuclei version: $VERSION"

        ASSET_URL=$(curl -s https://api.github.com/repos/projectdiscovery/nuclei/releases/latest \
          | jq -r '.assets[] | select(.name | test("linux_amd64.zip$")) | .browser_download_url')

        curl -sL "$ASSET_URL" -o nuclei.zip
        unzip -o -q nuclei.zip
        chmod +x nuclei
        sudo mv nuclei /usr/local/bin/

    - name: Install Fuzzing-Templates
      run: |
        git clone https://github.com/projectdiscovery/fuzzing-templates.git

    - name: Verify installations
      run: |
        nuclei -version
        python3 ParamSpider/paramspider.py -h || true
        python3 NucleiFuzzer/nf.py -h || true

    - name: Run scan on Input folder
      env:
        INPUT_DIR: Input
        OUTPUT_DIR: results
      run: |
        mkdir -p "$OUTPUT_DIR"

        for target_file in $INPUT_DIR/*; do
          domain=$(basename "$target_file")
          json_file="$OUTPUT_DIR/${domain}.json"
          log_file="$OUTPUT_DIR/${domain}.txt"

          mkdir -p "$(dirname "$json_file")"

          echo "🔍 Running scan for: $domain"

          cd NucleiFuzzer
          if timeout 30m python3 nf.py -f "../$target_file" -o "../$json_file" > "../$log_file" 2>&1; then
            echo "✅ Scan finished: $domain"
          else
            echo "❌ Scan faile

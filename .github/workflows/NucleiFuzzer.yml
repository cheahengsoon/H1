name: NucleiFuzzer (Parallel Scan)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      chunks: ${{ steps.split.outputs.chunks }}
    steps:
      - uses: actions/checkout@v4

      - name: Ensure Input/domains.txt exists
        run: |
          if [ ! -f "Input/domains.txt" ]; then
            echo "ERROR: Input/domains.txt not found."
            exit 1
          fi
          echo "Found $(wc -l < Input/domains.txt) domains."

      - name: Split domains into chunks of 50
        id: split
        run: |
          mkdir -p chunks
          split -l 50 Input/domains.txt chunks/domains_
          files=$(ls chunks | xargs -n1 basename | jq -R . | jq -s .)
          echo "chunks=$files" >> $GITHUB_OUTPUT

      - name: Upload chunks
        uses: actions/upload-artifact@v4
        with:
          name: domain-chunks
          path: chunks/

  scan:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk: ${{ fromJson(needs.prepare.outputs.chunks) }}
    steps:
      - uses: actions/checkout@v4

      - name: Download chunk
        uses: actions/download-artifact@v4
        with:
          name: domain-chunks
          path: chunks

      - name: Install system packages & Go
        run: |
          sudo apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
            git build-essential curl wget ca-certificates
          GO_VER="1.21.8"
          wget -q https://go.dev/dl/go${GO_VER}.linux-amd64.tar.gz -O /tmp/go.tar.gz
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf /tmp/go.tar.gz
          echo "export PATH=\$PATH:/usr/local/go/bin:\$HOME/go/bin" >> $GITHUB_ENV

      - name: Install tools
        run: |
          export GOPATH="$HOME/go"
          export PATH="$PATH:$GOPATH/bin"
          go install github.com/projectdiscovery/httpx/cmd/httpx@latest
          go install github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest
          git clone --depth 1 https://github.com/0xKayala/NucleiFuzzer.git /tmp/NucleiFuzzer
          cd /tmp/NucleiFuzzer
          chmod +x install.sh || true
          ./install.sh || true
          [ -f ./nf ] && sudo mv nf /usr/local/bin/nf && sudo chmod +x /usr/local/bin/nf
          nf -h || true

      - name: Pre-update nuclei templates
        run: |
          nuclei -update-templates || true
          nuclei -ut || true

      - name: Run NucleiFuzzer on chunk
        run: |
          chunkfile="chunks/${{ matrix.chunk }}"
          mkdir -p artifacts/nucleifuzzer
          nf -f "$chunkfile" -o "artifacts/nucleifuzzer/${{ matrix.chunk }}.out" || echo "⚠️ failed"
          ls -lah artifacts/nucleifuzzer

      - name: Upload chunk results
        uses: actions/upload-artifact@v4
        with:
          name: results-${{ matrix.chunk }}
          path: artifacts/nucleifuzzer/

  merge:
    needs: scan
    runs-on: ubuntu-latest
    steps:
      - name: Download all results
        uses: actions/download-artifact@v4
        with:
          path: all-results

      - name: Merge results
        run: |
          mkdir -p merged
          cat all-results/**/**/*.out > merged/all-results.txt || true
          echo "Final merged results:"
          wc -l merged/all-results.txt

      - name: Upload merged results
        uses: actions/upload-artifact@v4
        with:
          name: nucleifuzzer-merged-results
          path: merged/

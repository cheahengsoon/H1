name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # allows manual trigger

jobs:
  setup-and-scan:
    runs-on: ubuntu-latest
    env:
      TOOLS_DIR: $HOME/tools
      PATH: $HOME/tools/bin:$PATH
    steps:
      # Checkout repository with full git clone (avoids tar)
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Set up Go
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      # Cache Go modules and binaries
      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            $HOME/tools/bin
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Cache Python pip packages
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Create tools directory
      - name: Create tools directory
        run: mkdir -p $HOME/tools/bin

      # Install Go-based tools
      - name: Install Nuclei
        run: GO111MODULE=on go install -v github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest

      - name: Install waybackurls
        run: go install github.com/tomnomnom/waybackurls@latest

      - name: Install gauplus
        run: go install github.com/bp0lr/gauplus@latest

      - name: Install hakrawler
        run: go install github.com/hakluke/hakrawler@latest

      - name: Install katana
        run: go install github.com/projectdiscovery/katana/cmd/katana@latest

      - name: Install httpx
        run: go install github.com/projectdiscovery/httpx/cmd/httpx@latest

      # Install ParamSpider (Python)
      - name: Install ParamSpider
        run: |
          git clone https://github.com/0xKayala/ParamSpider.git
          pip3 install -r ParamSpider/requirements.txt
          ln -s $PWD/ParamSpider/paramspider.py $HOME/tools/bin/paramspider

      # Install uro (Python)
      - name: Install uro
        run: pip3 install uro

      # Ensure scripts are executable
      - name: Ensure scripts are executable
        run: chmod +x install.sh NucleiFuzzer.sh

      # Run installer
      - name: Run installer
        run: ./install.sh

      # Run help command
      - name: Run help command
        run: ./NucleiFuzzer.sh -h

      # Update Nuclei templates
      - name: Update Nuclei templates
        run: nuclei -update-templates

      # Run scan using Input/domains.txt and save results with timestamp
      - name: Run scan
        run: |
          if [ ! -f Input/domains.txt ]; then
            echo "Input/domains.txt not found!"
            exit 1
          fi
          mkdir -p Output
          TIMESTAMP=$(date +%Y%m%d_%H%M)
          ./NucleiFuzzer.sh -f Input/domains.txt > Output/scan_$TIMESTAMP.txt

      # Commit and push scan results
      - name: Commit and push results
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add Output/scan_*.txt
          git commit -m "Update scan results $TIMESTAMP [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

name: Nuclei - Per Domain Scan

on:
  workflow_dispatch:
    inputs:
      severity:
        description: "Global severity levels (default: critical,high,medium,low)"
        required: false
        default: "critical,high,medium,low"
      exclude_templates:
        description: "Global templates to exclude (default: http/default-logins,code,code/cves,http/cnvd)"
        required: false
        default: "http/default-logins,code,code/cves,http/cnvd"
      threads:
        description: "Number of concurrent threads (default: 10)"
        required: false
        default: "10"
      output_folder:
        description: "Folder to save results (default: result)"
        required: false
        default: "result"
  push:
    branches:
      - main

jobs:
  nuclei:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install Nuclei
        run: |
          go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
          nuclei -version

      - name: Ensure output folder exists
        run: mkdir -p "${{ github.event.inputs.output_folder || 'result' }}"

      - name: Cache Nuclei Templates
        uses: actions/cache@v3
        with:
          path: ~/.nuclei-templates
          key: nuclei-templates-${{ runner.os }}
          restore-keys: |
            nuclei-templates-

      - name: Update Nuclei templates
        run: nuclei -update-templates

      - name: Run Nuclei Per Domain with Overrides
        continue-on-error: true
        run: |
          OUTPUT_FOLDER=${{ github.event.inputs.output_folder || 'result' }}
          DEFAULT_SEVERITY=${{ github.event.inputs.severity || 'critical,high,medium,low' }}
          DEFAULT_EXCLUDE=${{ github.event.inputs.exclude_templates || 'http/default-logins,code,code/cves,http/cnvd' }}
          THREADS=${{ github.event.inputs.threads || 10 }}

          # Load per-domain overrides if CSV exists
          declare -A DOMAIN_EXCLUDE
          declare -A DOMAIN_SEVERITY
          if [[ -f nuclei-domain-overrides.csv ]]; then
            while IFS=, read -r domain exclude severity; do
              DOMAIN_EXCLUDE["$domain"]="$exclude"
              DOMAIN_SEVERITY["$domain"]="$severity"
            done < nuclei-domain-overrides.csv
          fi

          for file in live/*_live.txt; do
            domain=$(basename "$file" _live.txt)
            echo "[*] Scanning $domain..."
            EXCLUDE="${DOMAIN_EXCLUDE[$domain]:-$DEFAULT_EXCLUDE}"
            SEVERITY="${DOMAIN_SEVERITY[$domain]:-$DEFAULT_SEVERITY}"
            nuclei -l "$file" \
              -severity "$SEVERITY" \
              -stats \
              -exclude-templates "$EXCLUDE" \
              -t "$THREADS" \
              -o "${OUTPUT_FOLDER}/${domain}_nuclei.txt" \
              || echo "[-] Scan failed or timed out for $domain, continuing..."
          done

      - name: Commit and Push Scan Results
        run: |
          OUTPUT_FOLDER=${{ github.event.inputs.output_folder || 'result' }}
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add "${OUTPUT_FOLDER}"/*.txt
          git commit -m "Update Nuclei scan results" || echo "No new results to commit"
          git pull --rebase
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Nuclei Results Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-results-${{ github.sha }}-${{ github.ref_name }}
          path: "${{ github.event.inputs.output_folder || 'result' }}/"

name: Nuclei - Per Domain Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  nuclei:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Setup Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      # Install Nuclei via Go
      - name: Install Nuclei
        run: |
          go install github.com/projectdiscovery/nuclei/v3/cmd/nuclei@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
          nuclei -version

      # Ensure result folder exists
      - name: Create result folder
        run: mkdir -p result

      # Cache Nuclei templates
      - name: Cache Nuclei Templates
        uses: actions/cache@v3
        with:
          path: ~/.nuclei-templates
          key: nuclei-templates-${{ runner.os }}
          restore-keys: |
            nuclei-templates-

      # Update templates
      - name: Update Nuclei templates
        run: nuclei -update-templates

      # Run Nuclei scan for each live/*.txt file
      - name: Run Nuclei Per Domain
        run: |
          for file in live/*_live.txt; do
            domain=$(basename "$file" _live.txt)
            echo "[*] Scanning $domain..."
            nuclei -l "$file" \
              -severity critical,high,medium,low \
              -stats \
              -exclude-templates http/default-logins,code,code/cves,http/cnvd \
              -o "result/${domain}_nuclei.txt" || true
          done

      # Commit and push results
      - name: Commit and Push Scan Results
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add result/*.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update Nuclei scan results"
            git pull --rebase
            git push
          else
            echo "No changes detected. Skipping commit."
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload all results as artifact
      - name: Upload Nuclei Results Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuclei-results-${{ github.sha }}
          path: result/
